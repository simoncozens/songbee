<?xml version="1.0"?>
<?xml-stylesheet href="chrome://global/skin/" type="text/css"?>
<!DOCTYPE window [
<!ENTITY % SongbeeDTD SYSTEM "chrome://songbee/locale/songbee.dtd" >
%SongbeeDTD;
<!ENTITY % addSongDTD SYSTEM "chrome://songbee/locale/add-song.dtd" >
%addSongDTD;
]>
<window id="edit-pl" title="&addSong.title;"
          xmlns:html="http://www.w3.org/1999/xhtml"
          minheight="300"
          minwidth="500"
          onload="onloadstuff()"
  xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">
<script src="chrome://songbee/content/js/songbee.js"/>
<script src="chrome://songbee/content/js/xslt.js"/>
<script src="chrome://songbee/content/playitemtypes/song/create-song.js"/>
<popupset>
    <popup id="addmdpopup">
        <menuitem label="Add metadata" oncommand="addTreeRow()"/>
        <menuitem label="Mark as translation" oncommand="markTranslation()"/>
        <menuitem label="Delete metadata" oncommand="deleteHighlighted()"/>
	</popup>
</popupset>
<vbox flex="1">
    <hbox flex="1">
        <vbox>
			<tree flex="1" minwidth="200" editable="true" id="songmetadata" context="addmdpopup" onkeypress="if (event.keyCode == 8) { deleteHighlighted() }">
				<treecols>
					<treecol id="key" flex="1" editable="false"/>
					<treecol id="value" flex="1" editable="true"/>
				</treecols>
				<treechildren id="tc">
					<treeitem><treerow>
						<treecell label="&songbee.title;" editable="false"/> <treecell id="title" label=""/>
					</treerow></treeitem>			
				</treechildren>
			</tree>
            <textbox multiline="true" id="lyrics" flex="1" oninput="update_preview()"/>
        </vbox>
	    <splitter/>
        <iframe id="preview" flex="1" name="preview" src="chrome://songbee/content/blank-song.html"/>
    </hbox>
    <vbox flex="0" maxheight="50">
        <hbox>
            <button label="&songbee.cancel;" oncommand="window.close();"/>
            <spacer flex="1"/>
            <button label="&songbee.save;" oncommand="savechanges();"/>
        </hbox>
    </vbox>
</vbox>
<script>
var song;
var sid;
var ischanged = 0;

function deleteHighlighted() {
	var tree = document.getElementById("songmetadata");
	if (tree.editingRow != -1) return;
	var tc = document.getElementById("tc");
	var idList = []; 
	var rangeCount = tree.view.selection.getRangeCount();
	for (var i = 0; i &lt; rangeCount; i++) {  
		var start = {};  
		var end = {};  
		tree.view.selection.getRangeAt(i, start, end);  
		for(var c = start.value; c &lt;= end.value; c++) tc.removeChild(tree.view.getItemAtIndex(c));
	}
}

function savechanges() {
    var s = new SongPrototype();
    if(!s.title) {
        alert("&addSong.needsTitle;"); return;
    }

    if (!song) { song = Song.create(["title", s.title]) }
    song.title(s.title);
    var xml = from_text();
    var xmlDOM = (new DOMParser()).parseFromString(xml, "text/xml");

    song.xml(xml);
    song.song_key(s.key);
    window.close();
    var lines = xmlDOM.evaluate("//line", xmlDOM, null, XPathResult.ANY_TYPE,null); 
	
    var firstLine = lines.iterateNext();
    song.first_line(firstLine.textContent);
}
</script>
</window>

